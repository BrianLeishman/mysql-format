pub fn is_function(f: &str) -> bool {
    match f {
        "abs"
        | "acos"
        | "adddate"
        | "addtime"
        | "aes_decrypt"
        | "aes_encrypt"
        | "any_value"
        | "ascii"
        | "asin"
        | "asymmetric_decrypt"
        | "asymmetric_derive"
        | "asymmetric_encrypt"
        | "asymmetric_sign"
        | "asymmetric_verify"
        | "atan"
        | "atan2"
        | "avg"
        | "benchmark"
        | "bin"
        | "bin_to_uuid"
        | "bit_and"
        | "bit_count"
        | "bit_length"
        | "bit_or"
        | "bit_xor"
        | "can_access_column"
        | "can_access_database"
        | "can_access_table"
        | "can_access_view"
        | "cast"
        | "ceil"
        | "ceiling"
        | "char"
        | "char_length"
        | "character_length"
        | "charset"
        | "coalesce"
        | "coercibility"
        | "collation"
        | "compress"
        | "concat"
        | "concat_ws"
        | "connection_id"
        | "conv"
        | "convert"
        | "convert_tz"
        | "cos"
        | "cot"
        | "count"
        | "crc32"
        | "create_asymmetric_priv_key"
        | "create_asymmetric_pub_key"
        | "create_dh_parameters"
        | "create_digest"
        | "cume_dist"
        | "curdate"
        | "current_date"
        | "current_role"
        | "current_time"
        | "current_timestamp"
        | "current_user"
        | "curtime"
        | "database"
        | "date"
        | "date_add"
        | "date_format"
        | "date_sub"
        | "datediff"
        | "day"
        | "dayname"
        | "dayofmonth"
        | "dayofweek"
        | "dayofyear"
        | "decode"
        | "default"
        | "degrees"
        | "dense_rank"
        | "des_decrypt"
        | "des_encrypt"
        | "elt"
        | "encode"
        | "encrypt"
        | "exp"
        | "export_set"
        | "extract"
        | "extractvalue"
        | "field"
        | "find_in_set"
        | "first_value"
        | "floor"
        | "format"
        | "found_rows"
        | "from_base64"
        | "from_days"
        | "from_unixtime"
        | "geomcollection"
        | "geometrycollection"
        | "get_dd_column_privileges"
        | "get_dd_create_options"
        | "get_dd_index_sub_part_length"
        | "get_format"
        | "get_lock"
        | "greatest"
        | "group_concat"
        | "grouping"
        | "gtid_subset"
        | "gtid_subtract"
        | "hex"
        | "hour"
        | "icu_version"
        | "if"
        | "ifnull"
        | "inet_aton"
        | "inet_ntoa"
        | "inet6_aton"
        | "inet6_ntoa"
        | "instr"
        | "internal_auto_increment"
        | "internal_avg_row_length"
        | "internal_check_time"
        | "internal_checksum"
        | "internal_data_free"
        | "internal_data_length"
        | "internal_dd_char_length"
        | "internal_get_comment_or_error"
        | "internal_get_view_warning_or_error"
        | "internal_index_column_cardinality"
        | "internal_index_length"
        | "internal_keys_disabled"
        | "internal_max_data_length"
        | "internal_table_rows"
        | "internal_update_time"
        | "interval"
        | "is_free_lock"
        | "is_ipv4"
        | "is_ipv4_compat"
        | "is_ipv4_mapped"
        | "is_ipv6"
        | "is_used_lock"
        | "is_uuid"
        | "isnull"
        | "json_array"
        | "json_array_append"
        | "json_array_insert"
        | "json_arrayagg"
        | "json_contains"
        | "json_contains_path"
        | "json_depth"
        | "json_extract"
        | "json_insert"
        | "json_keys"
        | "json_length"
        | "json_merge"
        | "json_merge_patch"
        | "json_merge_preserve"
        | "json_object"
        | "json_objectagg"
        | "json_pretty"
        | "json_quote"
        | "json_remove"
        | "json_replace"
        | "json_search"
        | "json_set"
        | "json_storage_free"
        | "json_storage_size"
        | "json_table"
        | "json_type"
        | "json_unquote"
        | "json_valid"
        | "lag"
        | "last_insert_id"
        | "last_value"
        | "lcase"
        | "lead"
        | "least"
        | "left"
        | "length"
        | "linestring"
        | "ln"
        | "load_file"
        | "localtime"
        | "localtimestamp"
        | "locate"
        | "log"
        | "log10"
        | "log2"
        | "lower"
        | "lpad"
        | "ltrim"
        | "make_set"
        | "makedate"
        | "maketime"
        | "master_pos_wait"
        | "max"
        | "mbrcontains"
        | "mbrcoveredby"
        | "mbrcovers"
        | "mbrdisjoint"
        | "mbrequals"
        | "mbrintersects"
        | "mbroverlaps"
        | "mbrtouches"
        | "mbrwithin"
        | "md5"
        | "microsecond"
        | "mid"
        | "min"
        | "minute"
        | "mod"
        | "month"
        | "monthname"
        | "multilinestring"
        | "multipoint"
        | "multipolygon"
        | "name_const"
        | "now"
        | "nth_value"
        | "ntile"
        | "nullif"
        | "oct"
        | "octet_length"
        | "ord"
        | "password"
        | "percent_rank"
        | "period_add"
        | "period_diff"
        | "pi"
        | "point"
        | "polygon"
        | "position"
        | "pow"
        | "power"
        | "quarter"
        | "quote"
        | "radians"
        | "rand"
        | "random_bytes"
        | "rank"
        | "regexp_instr"
        | "regexp_like"
        | "regexp_replace"
        | "regexp_substr"
        | "release_all_locks"
        | "release_lock"
        | "repeat"
        | "replace"
        | "reverse"
        | "right"
        | "roles_graphml"
        | "round"
        | "row_count"
        | "row_number"
        | "rpad"
        | "rtrim"
        | "schema"
        | "sec_to_time"
        | "second"
        | "session_user"
        | "sha1"
        | "sha"
        | "sha2"
        | "sign"
        | "sin"
        | "sleep"
        | "soundex"
        | "space"
        | "sqrt"
        | "st_area"
        | "st_asbinary"
        | "st_aswkb"
        | "st_asgeojson"
        | "st_astext"
        | "st_aswkt"
        | "st_buffer"
        | "st_buffer_strategy"
        | "st_centroid"
        | "st_contains"
        | "st_convexhull"
        | "st_crosses"
        | "st_difference"
        | "st_dimension"
        | "st_disjoint"
        | "st_distance"
        | "st_distance_sphere"
        | "st_endpoint"
        | "st_envelope"
        | "st_equals"
        | "st_exteriorring"
        | "st_geohash"
        | "st_geomcollfromtext"
        | "st_geometrycollectionfromtext"
        | "st_geomcollfromtxt"
        | "st_geomcollfromwkb"
        | "st_geometrycollectionfromwkb"
        | "st_geometryn"
        | "st_geometrytype"
        | "st_geomfromgeojson"
        | "st_geomfromtext"
        | "st_geometryfromtext"
        | "st_geomfromwkb"
        | "st_geometryfromwkb"
        | "st_interiorringn"
        | "st_intersection"
        | "st_intersects"
        | "st_isclosed"
        | "st_isempty"
        | "st_issimple"
        | "st_isvalid"
        | "st_latfromgeohash"
        | "st_latitude"
        | "st_length"
        | "st_linefromtext"
        | "st_linestringfromtext"
        | "st_linefromwkb"
        | "st_linestringfromwkb"
        | "st_longfromgeohash"
        | "st_longitude"
        | "st_makeenvelope"
        | "st_mlinefromtext"
        | "st_multilinestringfromtext"
        | "st_mlinefromwkb"
        | "st_multilinestringfromwkb"
        | "st_mpointfromtext"
        | "st_multipointfromtext"
        | "st_mpointfromwkb"
        | "st_multipointfromwkb"
        | "st_mpolyfromtext"
        | "st_multipolygonfromtext"
        | "st_mpolyfromwkb"
        | "st_multipolygonfromwkb"
        | "st_numgeometries"
        | "st_numinteriorring"
        | "st_numinteriorrings"
        | "st_numpoints"
        | "st_overlaps"
        | "st_pointfromgeohash"
        | "st_pointfromtext"
        | "st_pointfromwkb"
        | "st_pointn"
        | "st_polyfromtext"
        | "st_polygonfromtext"
        | "st_polyfromwkb"
        | "st_polygonfromwkb"
        | "st_simplify"
        | "st_srid"
        | "st_startpoint"
        | "st_swapxy"
        | "st_symdifference"
        | "st_touches"
        | "st_transform"
        | "st_union"
        | "st_validate"
        | "st_within"
        | "st_x"
        | "st_y"
        | "statement_digest"
        | "statement_digest_text"
        | "std"
        | "stddev"
        | "stddev_pop"
        | "stddev_samp"
        | "str_to_date"
        | "strcmp"
        | "subdate"
        | "substr"
        | "substring"
        | "substring_index"
        | "subtime"
        | "sum"
        | "sysdate"
        | "system_user"
        | "tan"
        | "time"
        | "time_format"
        | "time_to_sec"
        | "timediff"
        | "timestamp"
        | "timestampadd"
        | "timestampdiff"
        | "to_base64"
        | "to_days"
        | "to_seconds"
        | "trim"
        | "truncate"
        | "ucase"
        | "uncompress"
        | "uncompressed_length"
        | "unhex"
        | "unix_timestamp"
        | "updatexml"
        | "upper"
        | "user"
        | "utc_date"
        | "utc_time"
        | "utc_timestamp"
        | "uuid"
        | "uuid_short"
        | "uuid_to_bin"
        | "validate_password_strength"
        | "values"
        | "var_pop"
        | "var_samp"
        | "variance"
        | "version"
        | "wait_for_executed_gtid_set"
        | "wait_until_sql_thread_after_gtids"
        | "week"
        | "weekday"
        | "weekofyear"
        | "weight_string"
        | "year"
        | "yearweek" => true,
        _ => false,
    }
}
